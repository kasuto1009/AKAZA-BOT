<<<<<<< HEAD
// commands/dado.js (VERSI√ìN "KATANA DEMONIACA")
=======
// commands/dado.js (VERSI√ìN COMMONJS - SIN STICKERS, SOLO TEXTO MEJORADO)
>>>>>>> 4190fc256127568555dde0af794dfc1b0a281b39

const DB = require('../core/db.js');

const PREFIX = process.env.PREFIX || '!';

// Configuraci√≥n del premio
const JACKPOT_NUMBER = 6;
<<<<<<< HEAD
const JACKPOT_REWARD = 50; // Tesoro por obtener la marca del destino

// Mapeo de resultados a emojis de dados
=======
const JACKPOT_REWARD = 50; // Monedas por sacar el n√∫mero ganador

// Mapeo de resultados a emojis de dados para un mensaje m√°s visual
>>>>>>> 4190fc256127568555dde0af794dfc1b0a281b39
const diceEmojiMap = {
    1: '1 ‚öÄ',
    2: '2 ‚öÅ',
    3: '3 ‚öÇ',
    4: '4 ‚öÉ',
    5: '5 ‚öÑ',
    6: '6 ‚öÖ'
};

module.exports = {
    name: 'dado',
    alias: ['roll', 'lanzar'],
<<<<<<< HEAD
    description: 'Desaf√≠a tu suerte y pon a prueba tu destino para obtener un tesoro.',
=======
    description: 'Lanza un dado virtual y gana monedas si sacas un 6.',
>>>>>>> 4190fc256127568555dde0af794dfc1b0a281b39
    public: true,

    execute: async (sock, msg, args, ctx) => {
        const { chatJid, userJid } = ctx;

<<<<<<< HEAD
        const userPhone = userJid.split('@')[0];
        const user = DB.getUserByPhone(userPhone);
        if (!user) {
            return sock.sendMessage(chatJid, { text: `üëπ Debes ser un guerrero registrado para desafiar al destino. Usa *${PREFIX}registrar*.` });
        }

        try {
            await sock.sendMessage(chatJid, { text: 'üé≤ El destino est√° en juego...' });

            const rollResult = Math.floor(Math.random() * 6) + 1;
            
            let finalMessage;

            if (rollResult === JACKPOT_NUMBER) {
                DB.addCoins(userPhone, JACKPOT_REWARD);
                finalMessage = 
`‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê üëπ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™
    *~ ¬°Fortuna Celestial! ~*

        Has obtenido un ${diceEmojiMap[rollResult]}

¬°Los cielos te sonr√≠en! Has sido recompensado con un tesoro de *${JACKPOT_REWARD} monedas* ü™ô.
‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚Ä¢| ‚úß |‚Ä¢ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™`;
            } else {
                finalMessage = 
`‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê üëπ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™
    *~ El Destino ha Hablado ~*

        Has obtenido un ${diceEmojiMap[rollResult]}

¬°Casi! La fortuna favorece a los perseverantes.
‚ï™‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê ‚Ä¢| ‚úß |‚Ä¢ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï™`;
            }

=======
        // 1. Verificaci√≥n de registro
        const userPhone = userJid.split('@')[0];
        const user = DB.getUserByPhone(userPhone);
        if (!user) {
            return sock.sendMessage(chatJid, { text: `‚ö†Ô∏è Para jugar, primero debes registrarte con *${PREFIX}registrar*.` });
        }

        try {
            await sock.sendMessage(chatJid, { text: 'üé≤ Lanzando el dado...' });

            // 2. Simular el lanzamiento del dado
            const rollResult = Math.floor(Math.random() * 6) + 1;
            
            // 3. Determinar el resultado y construir el mensaje final
            let finalMessage;

            if (rollResult === JACKPOT_NUMBER) {
                // ¬°Premio mayor!
                DB.addCoins(userPhone, JACKPOT_REWARD);
                finalMessage = 
`üíé ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ ‚ú¶ ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ üíé
        *¬°JACKPOT!* üéâü•≥
 
          Obtuviste un ${diceEmojiMap[rollResult]}
 
 ¬°Felicidades! Has ganado el premio mayor de *${JACKPOT_REWARD} monedas* ü™ô.
üíé ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ ‚ú¶ ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ üíé`;
            } else {
                // Resultado normal
                finalMessage = 
`üé≤ ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ ‚ú¶ ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ üé≤
       *Lanzamiento de Dado*
 
          Obtuviste un ${diceEmojiMap[rollResult]}
 
 ¬°Casi! Sigue intentando para ganar el premio mayor.
üé≤ ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ ‚ú¶ ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ üé≤`;
            }

            // 4. Enviar el resultado al chat
>>>>>>> 4190fc256127568555dde0af794dfc1b0a281b39
            await sock.sendMessage(chatJid, { text: finalMessage });

        } catch (error) {
            console.error('[DADO COMMAND ERROR]', error);
<<<<<<< HEAD
            await sock.sendMessage(chatJid, { text: '‚ùå Ocurri√≥ un error al consultar al destino.' });
=======
            await sock.sendMessage(chatJid, { text: '‚ùå Ocurri√≥ un error al lanzar el dado.' });
>>>>>>> 4190fc256127568555dde0af794dfc1b0a281b39
        }
    }
};