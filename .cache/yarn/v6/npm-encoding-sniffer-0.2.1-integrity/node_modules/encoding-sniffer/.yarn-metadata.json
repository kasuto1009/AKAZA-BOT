{
  "manifest": {
    "name": "encoding-sniffer",
    "version": "0.2.1",
    "description": "Implementation of the HTML encoding sniffer algo, with stream support",
    "bugs": {
      "url": "https://github.com/fb55/encoding-sniffer/issues"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/fb55/encoding-sniffer.git"
    },
    "funding": "https://github.com/fb55/encoding-sniffer?sponsor=1",
    "license": "MIT",
    "author": {
      "name": "Felix Boehm",
      "email": "me@feedic.com"
    },
    "type": "module",
    "exports": {
      ".": {
        "import": {
          "types": "./dist/esm/index.d.ts",
          "default": "./dist/esm/index.js"
        },
        "require": {
          "types": "./dist/commonjs/index.d.ts",
          "default": "./dist/commonjs/index.js"
        }
      },
      "./sniffer": {
        "import": {
          "types": "./dist/esm/sniffer.d.ts",
          "default": "./dist/esm/sniffer.js"
        },
        "require": {
          "types": "./dist/commonjs/sniffer.d.ts",
          "default": "./dist/commonjs/sniffer.js"
        }
      }
    },
    "main": "./dist/commonjs/index.js",
    "module": "./dist/esm/index.js",
    "types": "./dist/commonjs/index.d.ts",
    "files": [
      "sniffer.js",
      "sniffer.d.ts",
      "dist"
    ],
    "scripts": {
      "build": "tshy",
      "build:docs": "typedoc --hideGenerator src/index.ts",
      "format": "npm run format:es && npm run format:prettier",
      "format:es": "npm run lint:es -- --fix",
      "format:prettier": "npm run prettier -- --write",
      "lint": "npm run lint:es && npm run lint:ts && npm run lint:prettier",
      "lint:es": "eslint --ignore-path .gitignore .",
      "lint:prettier": "npm run prettier -- --check",
      "lint:ts": "tsc --noEmit",
      "prepublishOnly": "npm run build",
      "prettier": "prettier '**/*.{ts,md,json,yml}'",
      "test": "npm run test:vi && npm run lint",
      "test:vi": "vitest run"
    },
    "prettier": {
      "proseWrap": "always",
      "tabWidth": 4
    },
    "dependencies": {
      "iconv-lite": "^0.6.3",
      "whatwg-encoding": "^3.1.1"
    },
    "devDependencies": {
      "@types/node": "^22.15.30",
      "@types/whatwg-encoding": "^2.0.3",
      "@typescript-eslint/eslint-plugin": "^8.27.0",
      "@typescript-eslint/parser": "^8.33.1",
      "@vitest/coverage-v8": "^2.1.8",
      "eslint": "^8.57.1",
      "eslint-config-prettier": "^10.1.5",
      "eslint-plugin-n": "^17.19.0",
      "eslint-plugin-unicorn": "^56.0.1",
      "prettier": "^3.5.3",
      "tshy": "^3.0.2",
      "typedoc": "^0.28.5",
      "typescript": "^5.8.3",
      "vitest": "^2.0.2"
    },
    "tshy": {
      "exports": {
        ".": "./src/index.ts",
        "./sniffer": "./src/sniffer.ts"
      },
      "exclude": [
        "src/**/*.spec.ts"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/container/.cache/yarn/v6/npm-encoding-sniffer-0.2.1-integrity/node_modules/encoding-sniffer/package.json",
    "readmeFilename": "README.md",
    "readme": "# encoding-sniffer [![Node.js CI](https://github.com/fb55/encoding-sniffer/actions/workflows/nodejs-test.yml/badge.svg)](https://github.com/fb55/encoding-sniffer/actions/workflows/nodejs-test.yml)\n\nAn implementation of the HTML encoding sniffer algo, with stream support.\n\nThis module wraps around [iconv-lite](https://github.com/ashtuchkin/iconv-lite)\nto make decoding buffers and streams incredibly easy.\n\n## Features\n\n- Support for streams\n- Support for XML encoding types, including UTF-16 prefixes and\n  `<?xml encoding=\"...\">`\n- Allows decoding streams and buffers with a single function call\n\n## Installation\n\n```bash\nnpm install encoding-sniffer\n```\n\n## Usage\n\n```js\nimport { DecodeStream, getEncoding, decodeBuffer } from \"encoding-sniffer\";\n\n/**\n * All functions accept an optional options object.\n *\n * Available options are (with default values):\n */\nconst options = {\n    /**\n     * The maximum number of bytes to sniff. Defaults to `1024`.\n     */\n    maxBytes: 1024,\n    /**\n     * The encoding specified by the user. If set, this will only be overridden\n     * by a Byte Order Mark (BOM).\n     */\n    userEncoding: undefined,\n    /**\n     * The encoding specified by the transport layer. If set, this will only be\n     * overridden by a Byte Order Mark (BOM) or the user encoding.\n     */\n    transportLayerEncodingLabel: undefined,\n    /**\n     * The default encoding to use, if no encoding can be detected.\n     *\n     * Defaults to `\"windows-1252\"`.\n     */\n    defaultEncoding: \"windows-1252\",\n};\n\n// Use the `DecodeStream` transform stream to automatically decode\n// the contents of a stream as they are read\nconst decodeStream = new DecodeStream(options);\n\n// Or, use the `getEncoding` function to detect the encoding of a buffer\nconst encoding = getEncoding(buffer, options);\n\n// Use the `decodeBuffer` function to decode the contents of a buffer\nconst decodedBuffer = decodeBuffer(buffer, options);\n```\n\n## License\n\nThis project is licensed under the MIT License. See the [LICENSE](/LICENSE) file\nfor more information.\n",
    "licenseText": "Copyright (c) 2022 Felix Boehm <me@feedic.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/encoding-sniffer/-/encoding-sniffer-0.2.1.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/encoding-sniffer/-/encoding-sniffer-0.2.1.tgz",
    "hash": "",
    "integrity": "sha512-5gvq20T6vfpekVtqrYQsSCFZ1wEg5+wW0/QaZMWkFr6BqD3NfKs0rLCx4rrVlSWJeZb5NBJgVLswK/w2MWU+Gw==",
    "registry": "npm",
    "packageName": "encoding-sniffer",
    "cacheIntegrity": "sha512-5gvq20T6vfpekVtqrYQsSCFZ1wEg5+wW0/QaZMWkFr6BqD3NfKs0rLCx4rrVlSWJeZb5NBJgVLswK/w2MWU+Gw== sha1-OW7JesIs5aA3ukSvGZKsnUanuBk="
  },
  "registry": "npm",
  "hash": "e60beadb44fabdfa5e915b6aad842c482159d70120e7ec16d3f41a64c5a416be81a83dcd7cab34acb0b1e2bad59525897996f934126054bb302bfc3631653e1b"
}