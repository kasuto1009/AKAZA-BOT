{
  "manifest": {
    "name": "@tokenizer/inflate",
    "version": "0.2.7",
    "description": "Tokenized zip support",
    "type": "module",
    "exports": "./lib/index.js",
    "files": [
      "lib/**/*.js",
      "lib/**/*.d.ts"
    ],
    "scripts": {
      "clean": "del-cli 'lib/**/*.js' 'lib/**/*.js.map' 'lib/**/*.d.ts' 'test/**/*.js' 'test/**/*.js.map'",
      "compile-src": "tsc -p lib",
      "compile-test": "tsc -p test",
      "compile": "yarn run compile-src && yarn run compile-test",
      "build": "yarn run clean && yarn run compile",
      "eslint": "eslint lib test",
      "lint-md": "remark -u preset-lint-recommended .",
      "lint-ts": "biome check",
      "fix": "yarn run biome lint --write",
      "test": "mocha",
      "start": "yarn run compile && yarn run lint && yarn run cover-test"
    },
    "engines": {
      "node": ">=18"
    },
    "author": {
      "name": "Borewit",
      "url": "https://github.com/Borewit"
    },
    "license": "MIT",
    "packageManager": "yarn@4.3.1",
    "devDependencies": {
      "@aws-sdk/client-s3": "^3.750.0",
      "@biomejs/biome": "=1.9.4",
      "@tokenizer/s3": "^1.0.1",
      "@types/chai": "^5.0.1",
      "@types/debug": "^4",
      "@types/mocha": "^10.0.10",
      "@types/node": "^22.13.5",
      "chai": "^5.2.0",
      "del-cli": "^6.0.0",
      "file-type": "^20.1.0",
      "mocha": "^11.1.0",
      "strtok3": "^10.2.1",
      "ts-node": "^10.9.2",
      "typescript": "^5.7.3"
    },
    "dependencies": {
      "debug": "^4.4.0",
      "fflate": "^0.8.2",
      "token-types": "^6.0.0"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/Borewit/tokenizer-inflate.git"
    },
    "bugs": {
      "url": "hhttps://github.com/Borewit/tokenizer-inflate/issues"
    },
    "funding": {
      "type": "github",
      "url": "https://github.com/sponsors/Borewit"
    },
    "keywords": [
      "zip",
      "unzip",
      "decompress",
      "inflate",
      "strtok3",
      "tokenizer",
      "stream",
      "S3"
    ],
    "_registry": "npm",
    "_loc": "/home/container/.cache/yarn/v6/npm-@tokenizer-inflate-0.2.7-32dd9dfc9abe457c89b3d9b760fc0690c85a103b-integrity/node_modules/@tokenizer/inflate/package.json",
    "readmeFilename": "README.md",
    "readme": "[![Node.js CI](https://github.com/Borewit/tokenizer-inflate/actions/workflows/nodejs-ci.yml/badge.svg)](https://github.com/Borewit/tokenizer-inflate/actions/workflows/nodejs-ci.yml)\n[![NPM version](https://badge.fury.io/js/%40tokenizer%2Finflate.svg)](https://npmjs.org/package/@tokenizer/inflate)\n[![npm downloads](https://img.shields.io/npm/dm/@tokenizer%2Finflate.svg)](https://npmcharts.com/compare/%40tokenizer%2Finflate?start=1200&interval=30)\n\n# @tokenizer/inflate\n\n`@tokenizer/inflate` is a package designed for handling and extracting data from ZIP files efficiently using a tokenizer-based approach.\nThe library provides a customizable way to parse ZIP archives and extract compressed data while minimizing memory usage.\n\n## Features\n- Efficient Decompression: Handles streams compressed with DEFLATE and related formats (e.g., gzip).\n- Tokenizer Compatibility: Seamlessly integrates with [strtok3](https://github.com/Borewit/strtok3). For example, use  [@tokenizer/s3](https://github.com/Borewit/tokenizer-s3) for efficient partial extraction of a Zip stored on AWS S3 cloud file storage.\n- Streamlined Interface: Provides an intuitive API for working with compressed data in streaming and random-access scenarios.\n- Chunked Data Access: Leverages the underlying media's capabilities to offer chunked or random access to data, unlike traditional streams.\n- Plug-and-Play: Easily integrate with existing tokenizer-based workflows for parsing file metadata or binary structures.\n- Interrupt the extraction process conditionally.\n\n## Installation\n```bash\nnpm install @tokenizer/inflate\n```\n\n## Usage\n\n### Example: Extracting Specific Files\n\nThe following example demonstrates how to use the library to extract .txt files and stop processing when encountering a .stop file.\n\n```js\nimport { ZipHandler } from '@tokenizer/inflate';\nimport { fromFile } from 'strtok3';\n\nconst fileFilter = (file) => {\n  console.log(`Processing file: ${file.filename}`);\n\n  if (file.filename?.endsWith(\".stop\")) {\n    console.log(`Stopping processing due to file: ${file.filename}`);\n    return { handler: false, stop: true }; // Stop the unzip process\n  }\n\n  if (file.filename?.endsWith(\".txt\")) {\n    return {\n      handler: async (data) => {\n        console.log(`Extracted text file: ${file.filename}`);\n        console.log(new TextDecoder().decode(data));\n      },\n    };\n  }\n\n  return { handler: false }; // Ignore other files\n};\n\nasync function extractFiles(zipFilePath) {\n  const tokenizer = await fromFile(zipFilePath);\n  const zipHandler = new ZipHandler(tokenizer);\n  await zipHandler.unzip(fileFilter);\n}\n\nextractFiles('example.zip').catch(console.error);\n```\n\n## API\n\n### `ZipHandler`\nA class for handling ZIP file parsing and extraction.\n#### Constructor\n```ts\nnew ZipHandler(tokenizer: ITokenizer)\n```\n- **tokenizer**: An instance of ITokenizer to read the ZIP archive.\n#### Methods\n \n- `isZip(): Promise<boolean>`\n\n   Determines whether the input file is a ZIP archive.\n\n- `unzip(fileCb: InflateFileFilter): Promise<void>`\n\n  Extracts files from the ZIP archive, applying the provided `InflateFileFilter` callback to each file.\n\n```InflatedDataHandler``` \n\n## Types\n\n### `InflateFileFilter`\n```ts\ntype InflateFileFilter = (file: IFullZipHeader) => InflateFileFilterResult;\n```\nCallback function to determine whether a file should be handled or ignored.\n\n### `InflateFileFilterResult`\n```ts\ntype InflateFileFilterResult = {\n  handler: InflatedDataHandler | false; // Handle file data or ignore\n  stop?: boolean; // Stop processing further files\n};\n\n```\nReturned from `InflateFileFilter` to control file handling and extraction flow.\n\n### `InflatedDataHandler`\n```ts\ntype InflatedDataHandler = (fileData: Uint8Array) => Promise<void>;\n```\nHandler for processing uncompressed file data.\n\n## Compatibility\n\nThis module is a [pure ECMAScript Module (ESM)](https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c).\nThe distributed JavaScript codebase is compliant with the [ECMAScript 2020 (11th Edition)](https://en.wikipedia.org/wiki/ECMAScript_version_history#11th_Edition_%E2%80%93_ECMAScript_2020) standard.\nIf used with Node.js, it requires version â‰¥ 18.\n\n## License\nThis project is licensed under the MIT License. See the [LICENSE](LICENSE) file for details.",
    "licenseText": "Copyright (c) 2024, Borewit\nAll rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the\nrights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit\npersons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the\nSoftware.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE\nWARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@tokenizer/inflate/-/inflate-0.2.7.tgz#32dd9dfc9abe457c89b3d9b760fc0690c85a103b",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@tokenizer/inflate/-/inflate-0.2.7.tgz",
    "hash": "32dd9dfc9abe457c89b3d9b760fc0690c85a103b",
    "integrity": "sha512-MADQgmZT1eKjp06jpI2yozxaU9uVs4GzzgSL+uEq7bVcJ9V1ZXQkeGNql1fsSI0gMy1vhvNTNbUqrx+pZfJVmg==",
    "registry": "npm",
    "packageName": "@tokenizer/inflate",
    "cacheIntegrity": "sha512-MADQgmZT1eKjp06jpI2yozxaU9uVs4GzzgSL+uEq7bVcJ9V1ZXQkeGNql1fsSI0gMy1vhvNTNbUqrx+pZfJVmg== sha1-Mt2d/Jq+RXyJs9m3YPwGkMhaEDs="
  },
  "registry": "npm",
  "hash": "32dd9dfc9abe457c89b3d9b760fc0690c85a103b"
}