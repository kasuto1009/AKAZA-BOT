{
  "manifest": {
    "name": "github-url-from-git",
    "version": "1.4.0",
    "description": "Parse a github git url and return the github repo url",
    "main": "index.js",
    "scripts": {
      "test": "mocha test.js --reporter spec --require should"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/visionmedia/node-github-url-from-git.git"
    },
    "keywords": [
      "github",
      "git",
      "url",
      "parser"
    ],
    "author": {
      "name": "TJ Holowaychuk"
    },
    "license": "MIT",
    "devDependencies": {
      "better-assert": "~1.0.0",
      "mocha": "~1.9.0",
      "should": "~1.2.2"
    },
    "_registry": "npm",
    "_loc": "/home/container/.cache/yarn/v6/npm-github-url-from-git-1.4.0-285e6b520819001bde128674704379e4ff03e0de-integrity/node_modules/github-url-from-git/package.json",
    "readmeFilename": "Readme.md",
    "readme": "\n# github-url-from-git\n\n```js\ndescribe('parse(url)', function(){\n  it('should support git://*', function(){\n    var url = 'git://github.com/jamesor/mongoose-versioner';\n    parse(url).should.equal('https://github.com/jamesor/mongoose-versioner');\n  })\n\n  it('should support git://*.git', function(){\n    var url = 'git://github.com/treygriffith/cellar.git';\n    parse(url).should.equal('https://github.com/treygriffith/cellar');\n  })\n\n  it('should support https://*', function(){\n    var url = 'https://github.com/Empeeric/i18n-node';\n    parse(url).should.equal('https://github.com/Empeeric/i18n-node');\n  })\n\n  it('should support https://*.git', function(){\n    var url = 'https://jpillora@github.com/banchee/tranquil.git';\n    parse(url).should.equal('https://github.com/banchee/tranquil');\n  })\n\n  it('should return undefined on failure', function(){\n    var url = 'git://github.com/justgord/.git';\n    assert(null == parse(url));\n  })\n\n  it('should parse git@github.com:bcoe/thumbd.git', function() {\n    var url = 'git@github.com:bcoe/thumbd.git';\n    parse(url).should.eql('https://github.com/bcoe/thumbd');\n  })\n\n  it('should parse git@github.com:bcoe/thumbd.git#2.7.0', function() {\n    var url = 'git@github.com:bcoe/thumbd.git#2.7.0';\n    parse(url).should.eql('https://github.com/bcoe/thumbd');\n  })\n\n  it('should parse git+https://github.com/bcoe/thumbd.git', function() {\n    var url = 'git+https://github.com/bcoe/thumbd.git';\n    parse(url).should.eql('https://github.com/bcoe/thumbd');\n  })\n\n  it('should parse git+ssh://github.com/bcoe/thumbd.git', function() {\n    var url = 'git+ssh://github.com/bcoe/thumbd.git';\n    parse(url).should.eql('https://github.com/bcoe/thumbd');\n  })\n\n  it('should parse https://EastCloud@github.com/EastCloud/node-websockets.git', function() {\n    var url = 'https://EastCloud@github.com/EastCloud/node-websockets.git';\n    parse(url).should.eql('https://github.com/EastCloud/node-websockets');\n  })\n\n  // gist urls.\n\n  it('should parse git@gist urls', function() {\n    var url = 'git@gist.github.com:3135914.git';\n    parse(url).should.equal('https://gist.github.com/3135914')\n  })\n\n  it('should parse https://gist urls', function() {\n    var url = 'https://gist.github.com/3135914.git';\n    parse(url).should.equal('https://gist.github.com/3135914')\n  })\n\n  // Handle arbitrary GitHub Enterprise domains.\n\n  it('should parse parse extra GHE urls provided', function() {\n    var url = 'git://github.example.com/treygriffith/cellar.git';\n    parse(\n      url, {extraBaseUrls: ['github.example.com']}\n    ).should.equal('https://github.example.com/treygriffith/cellar');\n  });\n\n  it('should parse GHE urls with multiple subdomains', function() {\n    var url = 'git://github.internal.example.com/treygriffith/cellar.git';\n    parse(\n      url, {extraBaseUrls: ['github.internal.example.com']}\n    ).should.equal('https://github.internal.example.com/treygriffith/cellar');\n  });\n})\n\ndescribe('re', function() {\n  it('should expose GitHub url parsing regex', function() {\n    parse.re.source.should.equal(\n      /^(?:https?:\\/\\/|git:\\/\\/)?(?:[^@]+@)?(gist.github.com|github.com)[:\\/]([^\\/]+\\/[^\\/]+?|[0-9]+)$/.source\n    )\n  });\n})\n```\n",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2013 TJ Holowaychuk <tj@vision-media.ca>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/github-url-from-git/-/github-url-from-git-1.4.0.tgz#285e6b520819001bde128674704379e4ff03e0de",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/github-url-from-git/-/github-url-from-git-1.4.0.tgz",
    "hash": "285e6b520819001bde128674704379e4ff03e0de",
    "integrity": "sha512-Vd1uAwEIbUaaYodSvEZRgMOdLUvY7+kZ+PuJNPVBXldTuVcHFtcLENvl2Ds9KKO9q6Ld2o+eVmA/wabaN3/2mQ==",
    "registry": "npm",
    "packageName": "github-url-from-git",
    "cacheIntegrity": "sha512-Vd1uAwEIbUaaYodSvEZRgMOdLUvY7+kZ+PuJNPVBXldTuVcHFtcLENvl2Ds9KKO9q6Ld2o+eVmA/wabaN3/2mQ== sha1-KF5rUggZABveEoZ0cEN55P8D4N4="
  },
  "registry": "npm",
  "hash": "285e6b520819001bde128674704379e4ff03e0de"
}