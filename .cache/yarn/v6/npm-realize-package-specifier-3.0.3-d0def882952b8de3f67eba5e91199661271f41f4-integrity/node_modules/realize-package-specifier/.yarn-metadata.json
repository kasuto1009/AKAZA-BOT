{
  "manifest": {
    "name": "realize-package-specifier",
    "version": "3.0.3",
    "description": "Like npm-package-arg, but more so, producing full file paths and differentiating local tar and directory sources.",
    "main": "index.js",
    "scripts": {
      "test": "tap test/*.js"
    },
    "license": "ISC",
    "repository": {
      "type": "git",
      "url": "https://github.com/npm/realize-package-specifier.git"
    },
    "author": {
      "name": "Rebecca Turner",
      "email": "me@re-becca.org",
      "url": "http://re-becca.org"
    },
    "homepage": "https://github.com/npm/realize-package-specifier",
    "dependencies": {
      "dezalgo": "^1.0.1",
      "npm-package-arg": "^4.1.1"
    },
    "devDependencies": {
      "require-inject": "^1.1.0",
      "tap": "^5.7.1"
    },
    "_registry": "npm",
    "_loc": "/home/container/.cache/yarn/v6/npm-realize-package-specifier-3.0.3-d0def882952b8de3f67eba5e91199661271f41f4-integrity/node_modules/realize-package-specifier/package.json",
    "readmeFilename": "README.md",
    "readme": "realize-package-specifier\n-------------------------\n\nParse a package specifier, peeking at the disk to differentiate between\nlocal tarballs, directories and named modules.  This implements the logic\nused by `npm install` and `npm cache` to determine where to get packages\nfrom.\n\n```javascript\nvar realizePackageSpecifier = require(\"realize-package-specifier\")\nrealizePackageSpecifier(\"foo.tar.gz\", \".\", function (err, package) {\n    â€¦\n})\n```\n\n## Using\n\n* realizePackageSpecifier(*spec*, [*where*,] *callback*)\n\nParses *spec* using `npm-package-arg` and then uses stat to check to see if\nit refers to a local tarball or package directory.  Stats are done relative\nto *where*.  If it does then the local module is loaded.  If it doesn't then\ntarget is left as a remote package specifier.  Package directories are\nrecognized by the presence of a package.json in them.\n\n*spec* -- a package specifier, like: `foo@1.2`, or `foo@user/foo`, or\n`http://x.com/foo.tgz`, or `git+https://github.com/user/foo`\n\n*where* (optional, default: .) -- The directory in which we should look for\nlocal tarballs or package directories.\n\n*callback* function(*err*, *result*) -- Called once we've determined what\nkind of specifier this is.  The *result* object will be very like the one\nreturned by `npm-package-arg` except with three differences: 1) There's a\nnew type of `directory`.  2) The `local` type only refers to tarballs.  2)\nFor all `local` and `directory` type results spec will contain the full path of\nthe local package.\n\n## Result Object\n\nThe full definition of the result object is:\n\n* `name` - If known, the `name` field expected in the resulting pkg.\n* `type` - One of the following strings:\n  * `git` - A git repo\n  * `hosted` - A hosted project, from github, bitbucket or gitlab. Originally\n    either a full url pointing at one of these services or a shorthand like\n    `user/project` or `github:user/project` for github or `bitbucket:user/project`\n    for bitbucket.\n  * `tag` - A tagged version, like `\"foo@latest\"`\n  * `version` - A specific version number, like `\"foo@1.2.3\"`\n  * `range` - A version range, like `\"foo@2.x\"`\n  * `local` - A local file path\n  * `directory` - A local package directory\n  * `remote` - An http url (presumably to a tgz)\n* `spec` - The \"thing\".  URL, the range, git repo, etc.\n* `hosted` - If type=hosted this will be an object with the following keys:\n  * `type` - github, bitbucket or gitlab\n  * `ssh` - The ssh path for this git repo\n  * `sshurl` - The ssh URL for this git repo\n  * `https` - The HTTPS URL for this git repo\n  * `directUrl` - The URL for the package.json in this git repo\n* `raw` - The original un-modified string that was provided.\n* `rawSpec` - The part after the `name@...`, as it was originally\n  provided.\n* `scope` - If a name is something like `@org/module` then the `scope`\n  field will be set to `org`.  If it doesn't have a scoped name, then\n  scope is `null`.\n\n",
    "licenseText": "Copyright (c) 2015, Rebecca Turner\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\nFITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/realize-package-specifier/-/realize-package-specifier-3.0.3.tgz#d0def882952b8de3f67eba5e91199661271f41f4",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/realize-package-specifier/-/realize-package-specifier-3.0.3.tgz",
    "hash": "d0def882952b8de3f67eba5e91199661271f41f4",
    "integrity": "sha512-BwF/SVs7c0BFrh9DI5ovZKu1r95uYPwOcj/LlzKW2rNs+HgivxIN0f/RAtNCl+2++RB/tKI1uz63IMzWD1OqIg==",
    "registry": "npm",
    "packageName": "realize-package-specifier",
    "cacheIntegrity": "sha512-BwF/SVs7c0BFrh9DI5ovZKu1r95uYPwOcj/LlzKW2rNs+HgivxIN0f/RAtNCl+2++RB/tKI1uz63IMzWD1OqIg== sha1-0N74gpUrjeP2frpekRmWYScfQfQ="
  },
  "registry": "npm",
  "hash": "d0def882952b8de3f67eba5e91199661271f41f4"
}