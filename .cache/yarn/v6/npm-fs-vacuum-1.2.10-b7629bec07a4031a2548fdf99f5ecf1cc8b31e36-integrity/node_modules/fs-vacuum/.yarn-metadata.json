{
  "manifest": {
    "name": "fs-vacuum",
    "version": "1.2.10",
    "description": "recursively remove empty directories -- to a point",
    "main": "vacuum.js",
    "scripts": {
      "test": "standard && tap test/*.js"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/npm/fs-vacuum.git"
    },
    "keywords": [
      "rm",
      "rimraf",
      "clean"
    ],
    "author": {
      "name": "Forrest L Norvell",
      "email": "ogd@aoaioxxysz.net"
    },
    "license": "ISC",
    "bugs": {
      "url": "https://github.com/npm/fs-vacuum/issues"
    },
    "homepage": "https://github.com/npm/fs-vacuum",
    "devDependencies": {
      "mkdirp": "^0.5.1",
      "standard": "^6.0.8",
      "errno": "~0.1.0",
      "require-inject": "~1.3.0",
      "tap": "^5.7.1",
      "tmp": "0.0.28"
    },
    "dependencies": {
      "graceful-fs": "^4.1.2",
      "path-is-inside": "^1.0.1",
      "rimraf": "^2.5.2"
    },
    "_registry": "npm",
    "_loc": "/home/container/.cache/yarn/v6/npm-fs-vacuum-1.2.10-b7629bec07a4031a2548fdf99f5ecf1cc8b31e36-integrity/node_modules/fs-vacuum/package.json",
    "readmeFilename": "README.md",
    "readme": "# fs-vacuum\n\nRemove the empty branches of a directory tree, optionally up to (but not\nincluding) a specified base directory. Optionally nukes the leaf directory.\n\n## Usage\n\n```javascript\nvar logger = require(\"npmlog\");\nvar vacuum = require(\"fs-vacuum\");\n\nvar options = {\n  base  : \"/path/to/my/tree/root\",\n  purge : true,\n  log   : logger.silly.bind(logger, \"myCleanup\")\n};\n\n/* Assuming there are no other files or directories in \"out\", \"to\", or \"my\",\n * the final path will just be \"/path/to/my/tree/root\".\n */\nvacuum(\"/path/to/my/tree/root/out/to/my/files\", options, function (error) {\n  if (error) console.error(\"Unable to cleanly vacuum:\", error.message);\n});\n```\n# vacuum(directory, options, callback)\n\n* `directory` {String} Leaf node to remove. **Must be a directory, symlink, or file.**\n* `options` {Object}\n  * `base` {String} No directories at or above this level of the filesystem will be removed.\n  * `purge` {Boolean} If set, nuke the whole leaf directory, including its contents.\n  * `log` {Function} A logging function that takes `npmlog`-compatible argument lists.\n* `callback` {Function} Function to call once vacuuming is complete.\n  * `error` {Error} What went wrong along the way, if anything.\n",
    "licenseText": "Copyright (c) 2015, Forrest L Norvell\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\nFITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/fs-vacuum/-/fs-vacuum-1.2.10.tgz#b7629bec07a4031a2548fdf99f5ecf1cc8b31e36",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/fs-vacuum/-/fs-vacuum-1.2.10.tgz",
    "hash": "b7629bec07a4031a2548fdf99f5ecf1cc8b31e36",
    "integrity": "sha512-bwbv1FcWYwxN1F08I1THN8nS4Qe/pGq0gM8dy1J34vpxxp3qgZKJPPaqex36RyZO0sD2J+2ocnbwC2d/OjYICQ==",
    "registry": "npm",
    "packageName": "fs-vacuum",
    "cacheIntegrity": "sha512-bwbv1FcWYwxN1F08I1THN8nS4Qe/pGq0gM8dy1J34vpxxp3qgZKJPPaqex36RyZO0sD2J+2ocnbwC2d/OjYICQ== sha1-t2Kb7AekAxolSP35n17PHMizHjY="
  },
  "registry": "npm",
  "hash": "b7629bec07a4031a2548fdf99f5ecf1cc8b31e36"
}