{
  "manifest": {
    "name": "process-warning",
    "version": "5.0.0",
    "description": "A small utility for creating warnings and emitting them.",
    "main": "index.js",
    "type": "commonjs",
    "types": "types/index.d.ts",
    "scripts": {
      "lint": "eslint",
      "lint:fix": "eslint --fix",
      "test": "npm run test:unit && npm run test:jest && npm run test:typescript",
      "test:jest": "jest jest.test.js",
      "test:unit": "c8 --100 node --test",
      "test:typescript": "tsd"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/fastify/process-warning.git"
    },
    "keywords": [
      "fastify",
      "error",
      "warning",
      "utility",
      "plugin",
      "emit",
      "once"
    ],
    "author": {
      "name": "Tomas Della Vedova"
    },
    "contributors": [
      {
        "name": "Matteo Collina",
        "email": "hello@matteocollina.com"
      },
      {
        "name": "Manuel Spigolon",
        "email": "behemoth89@gmail.com"
      },
      {
        "name": "James Sumners",
        "url": "https://james.sumners.info"
      },
      {
        "name": "Frazer Smith",
        "email": "frazer.dev@icloud.com",
        "url": "https://github.com/fdawgs"
      }
    ],
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/fastify/fastify-warning/issues"
    },
    "homepage": "https://github.com/fastify/fastify-warning#readme",
    "funding": [
      {
        "type": "github",
        "url": "https://github.com/sponsors/fastify"
      },
      {
        "type": "opencollective",
        "url": "https://opencollective.com/fastify"
      }
    ],
    "devDependencies": {
      "@fastify/pre-commit": "^2.1.0",
      "benchmark": "^2.1.4",
      "c8": "^10.1.3",
      "eslint": "^9.17.0",
      "jest": "^29.7.0",
      "neostandard": "^0.12.0",
      "tsd": "^0.31.0"
    },
    "_registry": "npm",
    "_loc": "/home/container/.cache/yarn/v6/npm-process-warning-5.0.0-integrity/node_modules/process-warning/package.json",
    "readmeFilename": "README.md",
    "readme": "# process-warning\n\n[![CI](https://github.com/fastify/process-warning/actions/workflows/ci.yml/badge.svg?branch=main)](https://github.com/fastify/process-warning/actions/workflows/ci.yml)\n[![NPM version](https://img.shields.io/npm/v/process-warning.svg?style=flat)](https://www.npmjs.com/package/process-warning)\n[![neostandard javascript style](https://img.shields.io/badge/code_style-neostandard-brightgreen?style=flat)](https://github.com/neostandard/neostandard)\n\nA small utility for generating consistent warning objects across your codebase.\nIt also exposes a utility for emitting those warnings, guaranteeing that they are issued only once (unless configured otherwise).\n\n_This module is used by the [Fastify](https://fastify.dev) framework and it was called `fastify-warning` prior to version 1.0.0._\n\n### Install\n\n```\nnpm i process-warning\n```\n\n### Usage\n\nThe module exports two builder functions for creating warnings.\n\n```js\nconst {\n  createWarning,\n  createDeprecation\n} = require('process-warning')\n\nconst warning = createWarning({\n  name: 'ExampleWarning',\n  code: 'EXP_WRN_001',\n  message: 'Hello %s',\n  unlimited: true\n})\nwarning('world')\n```\n\n#### Methods\n\n##### `createWarning({ name, code, message[, unlimited] })`\n\n- `name` (`string`, required) - The error name, you can access it later with\n`error.name`. For consistency, we recommend prefixing module error names\nwith `{YourModule}Warning`\n- `code` (`string`, required) - The warning code, you can access it later with\n`error.code`. For consistency, we recommend prefixing plugin error codes with\n`{ThreeLetterModuleName}_`, e.g. `FST_`. NOTE: codes should be all uppercase.\n- `message` (`string`, required) - The warning message. You can also use\ninterpolated strings for formatting the message.\n- `options` (`object`, optional) - Optional options with the following\nproperties:\n  + `unlimited` (`boolean`, optional) - Should the warning be emitted more than\n  once? Defaults to `false`.\n\n\n##### `createDeprecation({code, message[, options]})`\n\nThis is a wrapper for `createWarning`. It is equivalent to invoking\n`createWarning` with the `name` parameter set to \"DeprecationWarning\".\n\nDeprecation warnings have extended support for the Node.js CLI options:\n`--throw-deprecation`, `--no-deprecation`, and `--trace-deprecation`.\n\n##### `warning([, a [, b [, c]]])`\n\nThe returned `warning` function can used for emitting warnings.\nA warning is guaranteed to be emitted at least once.\n\n- `[, a [, b [, c]]]` (`any`, optional) - Parameters for string interpolation.\n\n```js\nconst { createWarning } = require('process-warning')\nconst FST_ERROR_CODE = createWarning({ name: 'MyAppWarning', code: 'FST_ERROR_CODE', message: 'message' })\nFST_ERROR_CODE()\n```\n\nHow to use an interpolated string:\n```js\nconst { createWarning } = require('process-warning')\nconst FST_ERROR_CODE = createWarning({ name: 'MyAppWarning', code: 'FST_ERROR_CODE', message: 'Hello %s'})\nFST_ERROR_CODE('world')\n```\n\nThe `warning` object has methods and properties for managing the warning's state. Useful for testing.\n```js\nconst { createWarning } = require('process-warning')\nconst FST_ERROR_CODE = createWarning({ name: 'MyAppWarning', code: 'FST_ERROR_CODE', message: 'Hello %s'})\nconsole.log(FST_ERROR_CODE.emitted) // false\nFST_ERROR_CODE('world')\nconsole.log(FST_ERROR_CODE.emitted) // true\n\nconst FST_ERROR_CODE_2 = createWarning('MyAppWarning', 'FST_ERROR_CODE_2', 'Hello %s')\nFST_ERROR_CODE_2.emitted = true\nFST_ERROR_CODE_2('world') // will not be emitted because it is not unlimited\n```\n\nHow to use an unlimited warning:\n```js\nconst { createWarning } = require('process-warning')\nconst FST_ERROR_CODE = createWarning({ name: 'MyAppWarning', code: 'FST_ERROR_CODE', message: 'Hello %s', unlimited: true })\nFST_ERROR_CODE('world') // will be emitted\nFST_ERROR_CODE('world') // will be emitted again\n```\n\n#### Suppressing warnings\n\nIt is possible to suppress warnings by utilizing one of node's built-in warning suppression mechanisms.\n\nWarnings can be suppressed:\n\n- by setting the `NODE_NO_WARNINGS` environment variable to `1`\n- by passing the `--no-warnings` flag to the node process\n- by setting '--no-warnings' in the `NODE_OPTIONS` environment variable\n\nFor more information see [node's documentation](https://nodejs.org/api/cli.html).\n\n## License\n\nLicensed under [MIT](./LICENSE).\n",
    "licenseText": "MIT License\n\nCopyright (c) Fastify\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/process-warning/-/process-warning-5.0.0.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/process-warning/-/process-warning-5.0.0.tgz",
    "hash": "",
    "integrity": "sha512-a39t9ApHNx2L4+HBnQKqxxHNs1r7KF+Intd8Q/g1bUh6q0WIp9voPXJ/x0j+ZL45KF1pJd9+q2jLIRMfvEshkA==",
    "registry": "npm",
    "packageName": "process-warning",
    "cacheIntegrity": "sha512-a39t9ApHNx2L4+HBnQKqxxHNs1r7KF+Intd8Q/g1bUh6q0WIp9voPXJ/x0j+ZL45KF1pJd9+q2jLIRMfvEshkA== sha1-Vm4L950d/zCnLYu76ejs7+jTeNc="
  },
  "registry": "npm",
  "hash": "6b7f6df40a47371d8be3e1c19d02aac711cdb35afb285f889ed77c43f8356d487aab4588a7dbe83d727fc748fe64be39285d6925df7eab68cb21131fbc4b2190"
}