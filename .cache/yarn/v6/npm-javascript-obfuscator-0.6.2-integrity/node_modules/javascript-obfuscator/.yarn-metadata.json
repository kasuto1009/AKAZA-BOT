{
  "manifest": {
    "name": "javascript-obfuscator",
    "version": "0.6.2",
    "description": "JavaScript obfuscator",
    "keywords": [
      "obfuscator",
      "obfuscation",
      "uglify",
      "crush",
      "code protection",
      "javascript obfuscator",
      "js obfuscator"
    ],
    "main": "dist/index.js",
    "dependencies": {
      "babel-polyfill": "^6.9.1",
      "esprima": "^2.7.2",
      "escodegen": "^1.8.0",
      "estraverse": "^4.2.0",
      "source-map-support": "^0.4.2"
    },
    "devDependencies": {
      "babel-cli": "^6.11.4",
      "babel-loader": "^6.2.4",
      "babel-preset-es2015": "^6.9.0",
      "ts-loader": "^0.8.2",
      "typescript": "^1.8.10",
      "typings": "^0.8.1",
      "webpack": "^1.13.1",
      "webpack-node-externals": "^1.3.0"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/sanex3339/javascript-obfuscator.git"
    },
    "scripts": {
      "tsc": "tsc",
      "tsc:w": "tsc -w",
      "webpack": "node_modules/.bin/webpack",
      "watch": "node_modules/.bin/webpack --watch",
      "lite": "lite-server",
      "start": "concurrent \"npm run tsc:w\" \"npm run lite\" ",
      "tests": "node tests/dev-test.js"
    },
    "author": {
      "name": "Timofey Kachalov"
    },
    "license": "BSD-2-Clause",
    "_registry": "npm",
    "_loc": "/home/container/.cache/yarn/v6/npm-javascript-obfuscator-0.6.2-integrity/node_modules/javascript-obfuscator/package.json",
    "readmeFilename": "readme.md",
    "readme": "# JavaScript obfuscator for Node.js\n\nJavaScript obfuscator for Node.js is a free alternative of [js-obfuscator](https://github.com/caiguanhao/js-obfuscator) (which uses [javascriptobfuscator.com](https://javascriptobfuscator.com/Javascript-Obfuscator.aspx)) without any limits and sending data to a server.\nCompatible with ES6.\nTested on Angular2 bundle.\nhttps://gist.github.com/sanex3339/ffc2876123b52e6d11ce45369fd53acf\n\n[![npm version](https://badge.fury.io/js/javascript-obfuscator.svg)](https://badge.fury.io/js/javascript-obfuscator)\n\n## Installation\n\nInstall the package with NPM and add it to your `devDependencies`:\n\n`npm install --save-dev javascript-obfuscator`\n\n## Usage\n\n```javascript\nvar JavaScriptObfuscator = require('javascript-obfuscator');\n\nvar obfuscatedCode = JavaScriptObfuscator.obfuscate(\n    `\n    (function(){\n        var variable = 'abc';\n        console.log(variable);\n    })();\n    `,\n    {\n        rotateUnicodeArray: false\n    }\n);\n\nconsole.log(obfuscatedCode);\n/*\nvar _0xabf1 = [\n    '\\x61\\x62\\x63', \n    '\\x6c\\x6f\\x67'\n];\n(function() {\n    var _0xe6fab6 = _0xabf1[0x0];\n    console[_0xabf1[0x1]](_0xe6fab6);\n}());\n*/\n```\n\n## `obfuscate(sourceCode, options)`\n\n#### `sourceCode`\nType: `string` Default: `null`\n\nAny valid SourceCode.\n\n#### `options`\nType: `Object` Default: `null`\n\nOptions for JavaScript obfuscator:\n\n```javascript\n{\n    rotateUnicodeArray: true\n    // ...\n}\n```\n\n### Available options\n#### `compact`\nType: `boolean` Default: `true`\n\nCompact code output into one line.\n\n#### `debugProtection`\nType: `boolean` Default: `false`\n\n##### :warning: This option can cause browser freeze while Developer Tools is enabled! Use at own risk.\n\nForce enable debug mode in some browsers (mainly based on WebKit) on page load if Developer Tools panel is enabled.\nWith this options using of Debug panel is impossible.\n\nWebKit-based browsers: blocks the site window, but you still can navigate through Developer Tools panel.\nFirefox: does *not* block the site window, but you still can't use Debug panel.\n\n#### `debugProtectionInterval`\nType: `boolean` Default: `false`\n\n##### :warning: This option can cause browser freeze even while Developer Tools is disabled! Use at own risk.\n\nWorks if `debugProtection` is enabled.\n\nForce enable debug mode in some browsers (mainly based on WebKit) when Developer Tools panel was enabled, even after page was loaded.\n\n#### `disableConsoleOutput`\nType: `boolean` Default: `true`\n\nDisable `console.log`, `console.info`, `console.error` and `console.warn` messages output into browser console.\n\n#### `encodeUnicodeLiterals`\nType: `boolean` Default: `false`\n\n##### :warning: `unicodeArray` option must be enabled\n\nThis option can slightly slowdown your code speed.\n\nAll literals in unicode array becomes encoded in Base64.\nTo decode strings, special function will be inserted on page under `unicodeArray` node.\n\n#### `reservedNames`\nType: `string[]` Default: `[]`\n\nDisable obfuscation of variable names, function names and names of function parameters that match with given RegExp pattern.\n\nExample:\n```javascript\n\t{\n\t\treservedNames: [\n\t\t\t'^someVariable',\n\t\t\t'functionParameter_\\d'\n\t\t]\n\t}\n```\n\n#### `rotateUnicodeArray`\nType: `boolean` Default: `true`\n\n##### :warning: `unicodeArray` option must be enabled\n\nThis option will rotate all values inside `unicodeArray` on a random value during obfuscation of code, and insert inside source code helper function\nwhich will rotate array values back to their original indexes.\n\nKeep in mind that this option affects only how the code is visually organised, since the original arrays can be easily accessed during the debug process.\n\nIt is also not recommended to enable `rotateUnicodeArray` for small source code, because a helper function might attract attention.\n\n#### `selfDefending`\nType: `boolean` Default: `true`\n\n##### :warning: this option forces set the `compact` value to `true`\n\nEnables self-defending for obfuscated code. If obfuscated compact code will be formatted, this code will not work.\n\n#### `unicodeArray`\nType: `boolean` Default: `true`\n\nPut all literal strings into array and replace every literal string by array call.\n\n#### `unicodeArrayThreshold`\nType: `number` Default: `0.8` Min: `0` Max: `1`\n\n##### :warning: `unicodeArray` option must be enabled\n\nProbability that the literal string will inserted into `unicodeArray`.\nUse this option for huge source code size, because many calls to `unicodeArray` will slowdown code performance.\n\nValue `0` is equals `unicodeArray: false`.\n\n#### `wrapUnicodeArrayCalls`\nType: `boolean` Default: `true`\n\n##### :warning: `unicodeArray` option must be enabled\n\nInstead using direct calls to `unicodeArray` items `var t = _0x43a123[0x0]`, \nwhen index `0x0` can be easily reverted to `0` with few js beautifiers, this option will wrap all calls to special function instead.\n\n```javascript\nvar t = _0x12a634('0x0')\n```\n\n### License\nCopyright (C) 2016 [Timofey Kachalov](http://github.com/sanex3339).\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the\n    documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\nTHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
    "licenseText": "Redistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the\n    documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\nTHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/javascript-obfuscator/-/javascript-obfuscator-0.6.2.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/javascript-obfuscator/-/javascript-obfuscator-0.6.2.tgz",
    "hash": "",
    "integrity": "sha512-UvNa/20R1j7qPGYr06r5SRb1IDEln8FMuFzdiziKgJ5VP5xLbnJtoI4SPO/YaP5AHx8nUSSHeHlPzqlkQE3jwg==",
    "registry": "npm",
    "packageName": "javascript-obfuscator",
    "cacheIntegrity": "sha512-UvNa/20R1j7qPGYr06r5SRb1IDEln8FMuFzdiziKgJ5VP5xLbnJtoI4SPO/YaP5AHx8nUSSHeHlPzqlkQE3jwg== sha1-EIZCksCYvb/T1jDhDvZb2X+FIU8="
  },
  "registry": "npm",
  "hash": "52f35aff6d11d63eea3c662bd3aaf94916f52031259fc14cb85cdd8b388a809e553f9c4b6e726da08e123cefd868fe401f1f2751248778794fcea964404de3c2"
}