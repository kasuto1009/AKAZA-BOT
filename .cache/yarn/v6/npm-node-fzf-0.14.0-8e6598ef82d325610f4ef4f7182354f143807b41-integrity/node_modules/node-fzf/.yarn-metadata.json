{
  "manifest": {
    "name": "node-fzf",
    "version": "0.14.0",
    "description": "fzf ( junegunn/fzf ) inspired cli utility for node",
    "main": "src/main.js",
    "bin": {
      "nfzf": "bin/cli.js"
    },
    "files": [
      "bin/cli.js",
      "src/main.js",
      "usage.txt"
    ],
    "scripts": {
      "test": "tape test/test.js"
    },
    "keywords": [
      "node-fzf",
      "fzf",
      "fuzzy",
      "list",
      "search",
      "cli"
    ],
    "author": {
      "name": "talmobi",
      "email": "talmo.christian@gmail.com"
    },
    "license": "MIT",
    "private": false,
    "repository": {
      "type": "git",
      "url": "https://github.com/talmobi/node-fzf"
    },
    "bugs": {
      "url": "https://github.com/talmobi/node-fzf/issues",
      "email": "talmo.christian@gmail.com"
    },
    "dependencies": {
      "keypress": "~0.2.1",
      "minimist": "~1.2.5",
      "picocolors": "~1.1.1",
      "redstar": "0.0.2",
      "restore-cursor": "~3.1.0",
      "string-width": "~2.1.1",
      "ttys": "0.0.3"
    },
    "devDependencies": {
      "mock-stdin": "~1.0.0",
      "tape": "~4.13.0"
    },
    "_registry": "npm",
    "_loc": "/home/container/.cache/yarn/v6/npm-node-fzf-0.14.0-8e6598ef82d325610f4ef4f7182354f143807b41-integrity/node_modules/node-fzf/package.json",
    "readmeFilename": "README.md",
    "readme": "[![npm](https://img.shields.io/npm/v/node-fzf.svg?maxAge=3600&style=flat-square)](https://www.npmjs.com/package/node-fzf)\n[![npm](https://img.shields.io/npm/dm/node-fzf.svg?maxAge=3600)](https://www.npmjs.com/package/node-fzf)\n[![npm](https://img.shields.io/npm/l/node-fzf.svg?maxAge=3600&style=flat-square)](https://github.com/talmobi/node-fzf/blob/master/LICENSE)\n![mac](https://github.com/talmobi/node-fzf/actions/workflows/macos-node.js.yml/badge.svg?branch=master)\n![ubuntu](https://github.com/talmobi/node-fzf/actions/workflows/ubuntu-node.js.yml/badge.svg?branch=master)\n![windows](https://img.shields.io/badge/windows-unable%20to%20test%20automatically-yellow?style=flat)\n\n\n\n#  node-fzf\n[fzf](https://github.com/junegunn/fzf) inspired fuzzy CLI list selection ðŸŽ€\n\n![](https://i.imgur.com/SFUV5nW.gif)\n\n## Easy to use\n\n#### CLI usage\n```bash\nnpm install -g node-fzf\n\n# by default (TTY mode) will glob list of current dir files\nnfzf\n\n# using pipes\nfind . | nfzf | xargs cat | less\nmpv \"`find ~/Dropbox/music | nfzf --exact --keep-right`\" --no-audio-display\nalias merge=\"git branch | nfzf | xargs git merge\"\nalias checkout=\"git branch | nfzf | xargs git checkout\"\n```\n\n#### API usage\n\n##### promises\n```js\nconst nfzf = require( 'node-fzf' )\n\n// if you only care about r.query\n// nfzf.getInput( label )\n\nconst opts = {\n  /* required */\n  list: [ 'whale', 'giraffe', 'monkey' ],\n\n  /* (optional) */\n  // filtering mode (user can change modes by pressing ctrl-s)\n  mode: 'fuzzy' || 'normal',\n\n  /* (optional) */\n  // prefill user input\n  query: '',\n\n  /* (optional) */\n  // If there is only one match for the initial query (--query), do not\n  // start interactive finder and automatically select the only match\n  selectOne: false,\n\n  /* (optional) */\n  // % of screen to use to display results (minimum/defaults to 6 rows)\n  height: 0, // ex: 40 for 40%, 100 for 100%\n\n  /* (optional) */\n  // text before each displayed line, list index supplied as arg\n  prelinehook: function ( index ) { return '' },\n\n  /* (optional) */\n  // text after each displayed line, list index supplied as arg\n  postlinehook: function ( index ) { return '' }\n}\n\n;( async function () {\n  // opens interactive selection CLI\n  // note! this messes with stdout so if you are\n  // writing to stdout at the same time it will look a bit messy..\n  const result = await nfzf( opts )\n\n  const { selected, query } = result\n\n  if( !selected ) {\n    console.log( 'No matches for:', query )\n  } else {\n    console.log( selected.value ) // 'giraffe'\n    console.log( selected.index ) // 1\n    console.log( selected.value === opts.list[ selected.index ] ) // true\n  }\n} )()\n\n// can also add more items later..\nsetInterval( function () {\n  opts.list.push( 'foobar' )\n\n  // an .update method has been attached to the object/array\n  // that you gave to nfzf( ... )\n  opts.update( list )\n}, 1000 )\n```\n\n##### callbacks\n```js\nconst nfzf = require( 'node-fzf' )\n\n// if you only care about r.query\n// nfzf.getInput( label, callback )\n\nconst list = [ 'whale', 'giraffe', 'monkey' ]\n\n// opens interactive selection CLI\n// note! this messes with stdout so if you are\n// writing to stdout at the same time it will look a bit messy..\nconst api = nfzf( list, function ( result ) {\n  const { selected, query } = result\n  if( !selected ) {\n    console.log( 'No matches for:', query )\n  } else {\n    console.log( selected.value ) // 'giraffe'\n    console.log( selected.index ) // 1\n    console.log( selected.value === list[ selected.index ] ) // true\n\n    // the api is a reference to the same argument0 object\n    // with an added .update method attached.\n    console.log( list === api ) // true\n    console.log( list.update === api.update ) // true\n  }\n\n} )\n\n// can also add more items later..\nsetInterval( function () {\n  list.push( 'foobar' )\n  api.update( list )\n}, 1000 )\n```\n\n#### Keyboard\n```bash\n<ctrl-s>                      switch between search modes (fuzzy, normal/exact)\n\n<ctrl-j>,<ctrl-n>,down        scroll down\n<ctrl-k>,<ctrl-p>,up          scroll up\n\n<ctrl-d>                      scroll down by page size\n<ctrl-u>                      scroll up by page size\n\n<ctrl-a>                      jump to start of input\n<ctrl-e>                      jump to end of input (and toggles --keep-right)\n\n<esc>,<ctrl-q>,<ctrl-c>       cancel\n\n<return>,<ctrl-m>             trigger callback/promise with current selection and exit\n\n<ctrl-w>                      delete last word from input\n\n<ctrl-b>                      jump back a word\n<ctrl-f>                      jump forward a word\n\n<backspace>                   delete last input character\n```\n\n## About\n[fzf](https://github.com/junegunn/fzf) inspired fuzzy CLI list selection thing for node.\n\n## Why\neasy fuzzy list selection UI for NodeJS CLI programs.\n\n## How\nMostly [picocolors](https://github.com/alexeyraspopov/picocolors) for dealing with the terminal rendering\n~~Mostly [cli-color](https://github.com/medikoo/cli-color) for dealing with the terminal rendering~~\nand [ttys](https://github.com/TooTallNate/ttys) to hack the ttys to simultaneously\nread from non TTY stdin and read key inputs from TTY stdin -> So that we can get piped input while\nalso at the same time receive and handle raw keyboard input.\n\n## Used by\n[yt-play](https://github.com/talmobi/yt-play)\n\n[yt-search](https://github.com/talmobi/yt-search)\n\n## Similar\n[fzf](https://github.com/junegunn/fzf) even though it doesn't work in NodeJS directly is all-in-all a better tool than this piece of crap :) Highly recommend~\n\n[ipt](https://github.com/ruyadorno/ipt) - similar node based solution\n\n## Test\n```bash\nnpm test\n```\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/node-fzf/-/node-fzf-0.14.0.tgz#8e6598ef82d325610f4ef4f7182354f143807b41",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/node-fzf/-/node-fzf-0.14.0.tgz",
    "hash": "8e6598ef82d325610f4ef4f7182354f143807b41",
    "integrity": "sha512-VZU+nuj8zzEEtGzeYGGzKdSmj7W9oHm9xK2A1g1kEPmlyK3726T1iT1e9FCxWiaKKjEn3oqR+p3So7EjU94JaA==",
    "registry": "npm",
    "packageName": "node-fzf",
    "cacheIntegrity": "sha512-VZU+nuj8zzEEtGzeYGGzKdSmj7W9oHm9xK2A1g1kEPmlyK3726T1iT1e9FCxWiaKKjEn3oqR+p3So7EjU94JaA== sha1-jmWY74LTJWEPTvT3GCNU8UOAe0E="
  },
  "registry": "npm",
  "hash": "8e6598ef82d325610f4ef4f7182354f143807b41"
}