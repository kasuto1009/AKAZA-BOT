{
  "manifest": {
    "name": "@borewit/text-codec",
    "version": "0.1.1",
    "description": "Text Decoder",
    "type": "module",
    "exports": "./lib/index.js",
    "types": "lib/index.d.ts",
    "files": [
      "lib/index.js",
      "lib/index.d.ts"
    ],
    "scripts": {
      "clean": "del-cli lib/**/*.js lib/***.js.map test/**/*.d.ts test/**/*.js test/**/*.js.map",
      "build": "npm run compile",
      "compile:src": "tsc --p lib --sourceMap false",
      "compile:test": "tsc --p test",
      "compile": "npm run compile:src && npm run compile:test",
      "lint": "biome check",
      "test": "mocha",
      "update-biome": "npm install --save-dev --save-exact @biomejs/biome && npx @biomejs/biome migrate --write"
    },
    "devDependencies": {
      "@biomejs/biome": "2.1.4",
      "@types/chai": "^5.2.2",
      "@types/mocha": "^10.0.10",
      "chai": "^5.2.1",
      "mocha": "^11.7.1",
      "ts-node": "^10.9.2",
      "typescript": "^5.9.2"
    },
    "keywords": [
      "TextDecoder",
      "TextEncoder",
      "decoder",
      "decoding",
      "encod",
      "encoding",
      "decode",
      "text",
      "ascii",
      "utf-8",
      "utf8",
      "utf-16le",
      "latin1",
      "iso-8859-1",
      "windows-1252",
      "charset",
      "encoding",
      "decoding",
      "polyfill",
      "character-set",
      "latin",
      "hermes"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/Borewit/text-codec"
    },
    "author": {
      "name": "Borewit",
      "url": "https://github.com/Borewit"
    },
    "funding": {
      "type": "github",
      "url": "https://github.com/sponsors/Borewit"
    },
    "license": "MIT",
    "_registry": "npm",
    "_loc": "/home/container/.cache/yarn/v6/npm-@borewit-text-codec-0.1.1-integrity/node_modules/@borewit/text-codec/package.json",
    "readmeFilename": "README.md",
    "readme": "[![CI](https://github.com/Borewit/text-codec/actions/workflows/ci.yml/badge.svg)](https://github.com/Borewit/text-codec/actions/workflows/ci.yml)\n[![npm version](https://badge.fury.io/js/%40borewit%2Ftext-codec.svg)](https://www.npmjs.com/package/@borewit/text-codec)\n[![npm downloads](http://img.shields.io/npm/dm/@borewit/text-codec.svg)](https://npmcharts.com/compare/@borewit/text-codec?interval=30)\n![bundlejs](https://deno.bundlejs.com/?q=@borewit/text-codec&badge)\n[![License: MIT](https://img.shields.io/badge/License-MIT-green.svg?logo=open-source-initiative&logoColor=white)](LICENSE.txt)\n\n# `@borewit/text-codec`\n\nA **lightweight text encoding/decoding polyfill** for JavaScript engines (like [Hermes](https://hermesengine.dev/)) which lack support for certain `TextEncoder` / `TextDecoder` encoding types.\n\nThis module implements manual encoding and decoding for the most commonly used encodings, without pulling in large dependencies or experimental features.\n\n## âœ¨ Features\n\n### Supported encodings:\n- `utf-8` / `utf8`\n- `utf-16le`\n- `ascii`\n- `latin1` / `iso-8859-1`\n- `windows-1252`\n\n---\n\n## ðŸ“¦ Installation\n\n```sh\nnpm install @borewit/text-codec\n```\n\n\n# ðŸ“š API Documentation\n\n## `textDecode(bytes, encoding): string`\n\nDecodes binary data into a JavaScript string using the specified encoding.\n\n**Parameters**\n- `bytes` (`Uint8Array`) â€” The binary data to decode.\n- `encoding` (`SupportedEncoding`, optional) â€” Encoding type. Defaults to `\"utf-8\"`.  \n\n**Returns**\n- `string` â€” The decoded text.\n\n**Example**\n```js\nimport { textDecode } from \"@borewit/text-encode\";\n\nconst bytes = new Uint8Array([0x48, 0x65, 0x6c, 0x6c, 0x6f]);\nconst text = textDecode(bytes, \"ascii\");\nconsole.log(text); // \"Hello\"\n```\nEncodes a JavaScript string into binary form using the specified encoding.\n\n## `textEncode(input, encoding): Uint8Array`\n\n**Parameters**\n\n- `input` (`string`) â€” The string to encode.\n- `encoding` (`SupportedEncoding`, optional) â€” Encoding type. Defaults to `\"utf-8\"`.\n\n**Returns**\n\n`Uint8Array` â€” The encoded binary data.\n\nExample:\n```js\nimport { textEncode } from \"@borewit/text-encode\";\n\nconst bytes = textEncode(\"Hello\", \"utf-16le\");\nconsole.log(bytes); // Uint8Array([...])\n```\n\n## ðŸ“œ Licence\n\nThis project is licensed under the [MIT License](LICENSE.txt). Feel free to use, modify, and distribute as needed.\n ",
    "licenseText": "The MIT License (MIT)\n\nCopyright Â© 2025 Borewit\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/@borewit/text-codec/-/text-codec-0.1.1.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/@borewit/text-codec/-/text-codec-0.1.1.tgz",
    "hash": "",
    "integrity": "sha512-5L/uBxmjaCIX5h8Z+uu+kA9BQLkc/Wl06UGR5ajNRxu+/XjonB5i8JpgFMrPj3LXTCPA0pv8yxUvbUi+QthGGA==",
    "registry": "npm",
    "packageName": "@borewit/text-codec",
    "cacheIntegrity": "sha512-5L/uBxmjaCIX5h8Z+uu+kA9BQLkc/Wl06UGR5ajNRxu+/XjonB5i8JpgFMrPj3LXTCPA0pv8yxUvbUi+QthGGA== sha1-fn8nCSRz1eq8/+9pOoSfLMSEMdo="
  },
  "registry": "npm",
  "hash": "e4bfee0719a3682217e61f19faebbe900f4140b91cfd6974e94191e5a8cd471bbefd78e89c1e62f09a6014cacf8f72d74c23c0d29bfccb152f6d48be42d84618"
}