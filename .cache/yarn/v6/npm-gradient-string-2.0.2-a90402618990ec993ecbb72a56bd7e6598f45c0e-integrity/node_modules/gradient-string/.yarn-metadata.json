{
  "manifest": {
    "name": "gradient-string",
    "description": "Beautiful color gradients in terminal output",
    "version": "2.0.2",
    "author": {
      "name": "Boris K"
    },
    "license": "MIT",
    "main": "index.js",
    "scripts": {
      "built-in": "node examples/built-in.js",
      "coverage": "c8 report --reporter=text-lcov > coverage.lcov",
      "demo": "node examples/demo.js",
      "fix": "xo --fix",
      "lint": "xo",
      "test": "cross-env FORCE_COLOR=1 c8 ava",
      "prepare": "husky install"
    },
    "dependencies": {
      "chalk": "^4.1.2",
      "tinygradient": "^1.1.5"
    },
    "devDependencies": {
      "ava": "^3.15.0",
      "c8": "^7.11.2",
      "cross-env": "^7.0.3",
      "esm": "^3.2.25",
      "xo": "^0.48.0",
      "husky": "^7.0.4"
    },
    "files": [
      "index.js"
    ],
    "engines": {
      "node": ">=10"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/bokub/gradient-string.git"
    },
    "homepage": "https://github.com/bokub/gradient-string",
    "bugs": {
      "url": "https://github.com/bokub/gradient-string/issues"
    },
    "keywords": [
      "cli",
      "color",
      "colors",
      "colour",
      "command-line",
      "console",
      "formatting",
      "gradient",
      "gradients",
      "log",
      "logging",
      "shell",
      "string",
      "style",
      "styles",
      "terminal"
    ],
    "ava": {
      "require": [
        "esm"
      ]
    },
    "xo": {
      "rules": {
        "comma-dangle": "off",
        "node/prefer-global/buffer": "off",
        "operator-linebreak": "off",
        "padding-line-between-statements": "off",
        "unicorn/prefer-module": "off",
        "unicorn/prefer-regexp-test": "off",
        "unicorn/prefer-spread": "off",
        "unicorn/prevent-abbreviations": "off"
      }
    },
    "_registry": "npm",
    "_loc": "/home/container/.cache/yarn/v6/npm-gradient-string-2.0.2-a90402618990ec993ecbb72a56bd7e6598f45c0e-integrity/node_modules/gradient-string/package.json",
    "readmeFilename": "README.md",
    "readme": "# gradient-string\n\n[![Build Status][build-src]][build-href]\n[![Version][version-src]][version-href]\n[![Codecov][codecov-src]][codecov-href]\n[![Downloads][downloads-src]][downloads-href]\n[![XO code style][xo-src]][xo-href]\n[![Mentioned in Awesome Node.js][awesome-src]][awesome-href]\n\n\n> Beautiful color gradients in terminal output\n\n[![gradient-string](http://bit.ly/gradient-string-preview)](http://bit.ly/gradient-string-large)\n\n\n## Install\n\n```\n$ npm i gradient-string\n```\n\n## Usage\n\n```javascript\nconst gradient = require('gradient-string');\n\nconsole.log(gradient('cyan', 'pink')('Hello world!'));\n```\n\n### Initialize a gradient\n\n```javascript\n// Using varargs\nlet coolGradient = gradient('red', 'green', 'blue');\n\n// Using array\nlet coolGradient = gradient(['#FF0000', '#00FF00', '#0000FF']);\n```\n\nThe colors are parsed with TinyColor, [multiple formats are accepted](https://github.com/bgrins/TinyColor/blob/master/README.md#accepted-string-input).\n\n```javascript\nlet coolGradient = gradient([\n  tinycolor('#FFBB65'),       // tinycolor object\n  {r: 0, g: 255, b: 0},       // RGB object\n  {h: 240, s: 1, v: 1, a: 1}, // HSVa object\n  'rgb(120, 120, 0)',         // RGB CSS string\n  'gold'                      // named color\n]);\n```\n\n### Use a gradient\n\n```javascript\nlet coolString = coolGradient('This is a fancy string!');\nconsole.log(coolString);\n```\n\n## Built-in gradients\n\n### Usage\n\n```javascript\nconst gradient = require('gradient-string');\n\n// Use the rainbow gradient\nconsole.log(gradient.rainbow('I love gradient-strings!'))\n```\n\n### Available built-in gradients\n\n[![Built-in gradients](http://bit.ly/2uFygrL)](http://bit.ly/2ufX07r)\n\n## Multi line gradients\n\nIn some cases, you may want to apply the same horizontal gradient on each line of a long text (or a piece of ASCII art).\n\nYou can use the `multiline()` method of a gradient to ensure that the colors are vertically aligned.\n\n```javascript\nconst gradient = require('gradient-string');\n\n// Use the same gradient on every line\nlet duck = gradient('orange', 'yellow').multiline([\n    \"  __\",\n    \"<(o )___\",\n    \" ( ._> /\",\n    \"  `---'\",\n].join('\\n'));\nconsole.log(duck);\n\n// Works with aliases\ngradient.atlas.multiline('Multi line\\nstring');\n\n// Works with advanced options\ngradient('cyan', 'pink').multiline('Multi line\\nstring', {interpolation: 'hsv'});\n```\n\n\n## Advanced gradients\n\nThere are also more advanced options for gradient customization, such as custom color stops, or choice of color interpolation\n  \n### Custom color stops\n\nBy default, the gradient color stops are distributed equidistantly.\n\nYou can specify the position of each color stop (between `0` and `1`), using the following syntax:\n\n```javascript\nlet coolGradient = gradient([\n  {color: '#d8e0de', pos: 0},\n  {color: '#255B53', pos: 0.8},\n  {color: '#000000', pos: 1}\n]);\n```\n\n### Color interpolation\n\nWhen using a gradient, you can actually add a second parameter to choose how the colors will be generated.\n\nHere is the full gradient API:\n\n#### myGradient(text, [options])\n\n##### text\nType: `string`<br>\nString you want to color.\n\n##### options\nType: `Object`<br>\n\n###### interpolation\nType: `string`<br>\nThe gradient can be generated using RGB or HSV interpolation. HSV usually produces brighter colors.\n`interpolation` can be set to `rgb` for RGB interpolation, or`hsv` for HSV interpolation.<br>\nDefaults to `rgb`. Case insentitive\n\n###### hsvSpin\nType: `string`<br>\nUsed only in the case of HSV interpolation.<br>\nBecause hue can be considered as a circle, there are two ways to go from a color to another color.<br>\n`hsvSpin` can be either `short` or `long`, depending on if you want to take the shortest or the longest way between two colors.<br>\nDefaults to `short`. Case insensitive\n\n#### Example\n##### Code\n```javascript\nconst redToGreen = gradient('red', 'green');\nconst str = '■'.repeat(48);\n\n// Standard RGB gradient\nconsole.log(redToGreen(str)); \n\n// Short HSV gradient: red -> yellow -> green\nconsole.log(redToGreen(str, {interpolation: 'hsv'}));\n\n// Long HSV gradient: red -> magenta -> blue -> cyan -> green\nconsole.log(redToGreen(str, {interpolation: 'hsv', hsvSpin: 'long'}));\n```\n##### Result\n![Example result](http://i.imgur.com/plQAN2Q.png)\n\n## Typescript\n\nTypescript definitions of gradient-string are available on [DefinitelyTyped](https://www.npmjs.com/package/@types/gradient-string)\n\n```sh\nnpm i @types/gradient-string\n```\n\n\n## Dependencies\n\n- [tinygradient](https://github.com/mistic100/tinygradient) - Generate gradients\n- [chalk](https://github.com/chalk/chalk) - Output colored text to terminal\n\n\n## License\n\nMIT © [Boris K](https://github.com/bokub)\n\n[build-src]: https://flat.badgen.net/github/checks/bokub/gradient-string?label=tests\n[version-src]: https://runkit.io/bokub/npm-version/branches/master/gradient-string?style=flat\n[codecov-src]: https://flat.badgen.net/codecov/c/github/bokub/gradient-string\n[downloads-src]: https://flat.badgen.net/npm/dm/gradient-string?color=FF9800\n[xo-src]: https://flat.badgen.net/badge/code%20style/XO/5ed9c7\n[awesome-src]: https://awesome.re/mentioned-badge-flat.svg\n\n[build-href]: https://github.com/bokub/gradient-string/actions/workflows/run.yml\n[version-href]: https://www.npmjs.com/package/gradient-string\n[codecov-href]: https://codecov.io/gh/bokub/gradient-string\n[downloads-href]: https://www.npmjs.com/package/gradient-string\n[xo-href]: https://github.com/sindresorhus/xo\n[awesome-href]: https://github.com/sindresorhus/awesome-nodejs\n",
    "licenseText": "MIT License\n\nCopyright (c) 2017 Boris K\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/gradient-string/-/gradient-string-2.0.2.tgz#a90402618990ec993ecbb72a56bd7e6598f45c0e",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/gradient-string/-/gradient-string-2.0.2.tgz",
    "hash": "a90402618990ec993ecbb72a56bd7e6598f45c0e",
    "integrity": "sha512-rEDCuqUQ4tbD78TpzsMtt5OIf0cBCSDWSJtUDaF6JsAh+k0v9r++NzxNEG87oDZx9ZwGhD8DaezR2L/yrw0Jdw==",
    "registry": "npm",
    "packageName": "gradient-string",
    "cacheIntegrity": "sha512-rEDCuqUQ4tbD78TpzsMtt5OIf0cBCSDWSJtUDaF6JsAh+k0v9r++NzxNEG87oDZx9ZwGhD8DaezR2L/yrw0Jdw== sha1-qQQCYYmQ7Jk+y7cqVr1+ZZj0XA4="
  },
  "registry": "npm",
  "hash": "a90402618990ec993ecbb72a56bd7e6598f45c0e"
}